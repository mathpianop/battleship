{"version":3,"file":"main.js","sources":["webpack://battleship/./src/style/style.css","webpack://battleship/./node_modules/css-loader/dist/runtime/api.js","webpack://battleship/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://battleship/./src/style/style.css?c9f0","webpack://battleship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://battleship/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://battleship/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://battleship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://battleship/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://battleship/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://battleship/./src/factories/AttackReport.js","webpack://battleship/./src/factories/ExposedTarget.js","webpack://battleship/./src/factories/Game.js","webpack://battleship/./src/factories/Gameboard.js","webpack://battleship/./src/factories/Player.js","webpack://battleship/./src/factories/Ship.js","webpack://battleship/./src/factories/ShipDetails.js","webpack://battleship/./src/helpers/coordinatesExist.js","webpack://battleship/./src/helpers/createGameObjects.js","webpack://battleship/./src/helpers/getOccupiedPositions.js","webpack://battleship/./src/helpers/positionHelpers.js","webpack://battleship/./src/helpers/possiblePositions.js","webpack://battleship/./src/interface/createCustomElement.js","webpack://battleship/./src/interface/gameplayDisplay.js","webpack://battleship/./src/interface/initializeBoards.js","webpack://battleship/./src/interface/setupDisplay.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/compat get default export","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed, \\nfigure, figcaption, footer, header, hgroup, \\nmenu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tborder: 0;\\n\\tfont-size: 100%;\\n\\tfont: inherit;\\n\\tvertical-align: baseline;\\n}\\n\\nbutton {\\n  cursor: pointer;\\n}\\n\\n#title {\\n  margin-top: 20px;\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  font-size: 50px;\\n  font-weight: 700;\\n  text-align: center;\\n}\\n\\n#dialogue {\\n  margin-top: 10px;\\n  margin-bottom: 30px;\\n}\\n\\n#ships-placement {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n\\n.message {\\n  display: block;\\n  margin-bottom: 10px;\\n  text-align: center;\\n  white-space: nowrap;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 20px;\\n}\\n.ship-placement-btn {\\n  flex: 1;\\n  margin-right: 8px;\\n  padding: 2px;\\n  border: 2px solid #000;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\n.ship-placement-btn .name, .ship-placement-btn .length {\\n  display: block;\\n  text-align: center;\\n}\\n\\n#game-container {\\n  width: 740px;\\n  margin: auto\\n}\\n\\n\\n\\n#gameboards {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%\\n}\\n\\n.gameboard {\\n  width: 300px;\\n  height: 300px;\\n  padding: 20px;\\n  display: grid;\\n  grid-template-columns: repeat(11, 1fr);\\n}\\n\\n\\n#board-divider {\\n  border-right: 2px solid black;\\n}\\n\\n.gameboard-header {\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  font-size: 30px;\\n  text-align: center;\\n}\\n\\n\\n\\n.position {\\n  box-sizing: border-box;\\n  height: 22px;\\n  width: 22px;\\n  border: 1px solid black;\\n  background-image: radial-gradient(#000 0%, lightgray  20%);\\n  background-color: lightgray;\\n}\\n\\n#computer-response-wrapper {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 20px;\\n  width: 100%;\\n}\\n\\n\\n\\n.hit {\\n  background-color: red;\\n  background-image: none;\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n  text-align: center;\\n}\\n\\n.missed{\\n  background-color: white;\\n  background-image: none;\\n}\\n\\n\\n\\n\\n.sunk {\\n  background-color: black;\\n  color: white;\\n}\\n.active {\\n  cursor: pointer;\\n}\\n\\n.occupied {\\n  background-image: none;\\n  text-align: center;\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n}\\n\\n.selectable {\\n  border-color: rgb(11, 190, 11);\\n  border-width: 2px;\\n  cursor: pointer;\\n}\\n\\n.selected {\\n  border-width: 2px;\\n  border-color: rgb(0, 119, 255);\\n}\\n\\n.placed {\\n  border-color: rgb(223, 93, 93);\\n}\\n\\n#new-game-btn {\\n  display: block;\\n  margin: auto;\\n  background: none;\\n  border: 2px solid black;\\n  border-radius: 4px;\\n  padding: 10px 5px;\\n}\\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,6EAA6E;EAC7E,eAAe;EACf,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;;AAGA;EACE,cAAc;EACd,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;EACnB,yCAAyC;EACzC,eAAe;AACjB;AACA;EACE,OAAO;EACP,iBAAiB;EACjB,YAAY;EACZ,sBAAsB;EACtB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ;AACF;;;;AAIA;EACE,aAAa;EACb,8BAA8B;EAC9B;AACF;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,aAAa;EACb,sCAAsC;AACxC;;;AAGA;EACE,6BAA6B;AAC/B;;AAEA;EACE,6EAA6E;EAC7E,eAAe;EACf,kBAAkB;AACpB;;;;AAIA;EACE,sBAAsB;EACtB,YAAY;EACZ,WAAW;EACX,uBAAuB;EACvB,0DAA0D;EAC1D,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,gBAAgB;EAChB,WAAW;AACb;;;;AAIA;EACE,qBAAqB;EACrB,sBAAsB;EACtB,gDAAgD;EAChD,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,sBAAsB;AACxB;;;;;AAKA;EACE,uBAAuB;EACvB,YAAY;AACd;AACA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,gDAAgD;AAClD;;AAEA;EACE,8BAA8B;EAC9B,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,gBAAgB;EAChB,uBAAuB;EACvB,kBAAkB;EAClB,iBAAiB;AACnB\",\"sourcesContent\":[\"html, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed, \\nfigure, figcaption, footer, header, hgroup, \\nmenu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tborder: 0;\\n\\tfont-size: 100%;\\n\\tfont: inherit;\\n\\tvertical-align: baseline;\\n}\\n\\nbutton {\\n  cursor: pointer;\\n}\\n\\n#title {\\n  margin-top: 20px;\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  font-size: 50px;\\n  font-weight: 700;\\n  text-align: center;\\n}\\n\\n#dialogue {\\n  margin-top: 10px;\\n  margin-bottom: 30px;\\n}\\n\\n#ships-placement {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n\\n.message {\\n  display: block;\\n  margin-bottom: 10px;\\n  text-align: center;\\n  white-space: nowrap;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 20px;\\n}\\n.ship-placement-btn {\\n  flex: 1;\\n  margin-right: 8px;\\n  padding: 2px;\\n  border: 2px solid #000;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\n.ship-placement-btn .name, .ship-placement-btn .length {\\n  display: block;\\n  text-align: center;\\n}\\n\\n#game-container {\\n  width: 740px;\\n  margin: auto\\n}\\n\\n\\n\\n#gameboards {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%\\n}\\n\\n.gameboard {\\n  width: 300px;\\n  height: 300px;\\n  padding: 20px;\\n  display: grid;\\n  grid-template-columns: repeat(11, 1fr);\\n}\\n\\n\\n#board-divider {\\n  border-right: 2px solid black;\\n}\\n\\n.gameboard-header {\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  font-size: 30px;\\n  text-align: center;\\n}\\n\\n\\n\\n.position {\\n  box-sizing: border-box;\\n  height: 22px;\\n  width: 22px;\\n  border: 1px solid black;\\n  background-image: radial-gradient(#000 0%, lightgray  20%);\\n  background-color: lightgray;\\n}\\n\\n#computer-response-wrapper {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 20px;\\n  width: 100%;\\n}\\n\\n\\n\\n.hit {\\n  background-color: red;\\n  background-image: none;\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n  text-align: center;\\n}\\n\\n.missed{\\n  background-color: white;\\n  background-image: none;\\n}\\n\\n\\n\\n\\n.sunk {\\n  background-color: black;\\n  color: white;\\n}\\n.active {\\n  cursor: pointer;\\n}\\n\\n.occupied {\\n  background-image: none;\\n  text-align: center;\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n}\\n\\n.selectable {\\n  border-color: rgb(11, 190, 11);\\n  border-width: 2px;\\n  cursor: pointer;\\n}\\n\\n.selected {\\n  border-width: 2px;\\n  border-color: rgb(0, 119, 255);\\n}\\n\\n.placed {\\n  border-color: rgb(223, 93, 93);\\n}\\n\\n#new-game-btn {\\n  display: block;\\n  margin: auto;\\n  background: none;\\n  border: 2px solid black;\\n  border-radius: 4px;\\n  padding: 10px 5px;\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var style = document.createElement(\"style\");\n  options.setAttributes(style, options.attributes);\n  options.insert(style);\n  return style;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(style) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    style.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute(\"media\", media);\n  } else {\n    style.removeAttribute(\"media\");\n  }\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, style);\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var style = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(style, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(style);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, style) {\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","function AttackReport(coors, hitShip) {\n  if (hitShip && hitShip.isSunk()) {\n    //If the attack shot hits, report hit details\n    return {\n      hit: true,\n      sunk: true,\n      ship: hitShip,\n      coors: coors,\n      message: `${hitShip.name} hit and sunk`\n    }\n  } else if (hitShip) {\n    return {\n      hit: true,\n      sunk: false,\n      ship: hitShip,\n      coors: coors,\n      message: `${hitShip.name} hit`\n    }\n  } else {\n    //If the shot misses, report hit as false\n    return {\n      hit: false,\n      coors: coors,\n      message: \"Missed\"\n    }\n  }\n}\n\nmodule.exports = AttackReport;\n","function ExposedTarget(ship, initialOrientation) {\nlet orientation = initialOrientation\nconst hitPositions = [];\n\nconst determineOrientation = function() {\n  const firstHit = hitPositions[0];\n  const secondHit = hitPositions[1]\n  if (firstHit[0] === secondHit[0]) {\n    //xCoors are constant\n    return \"vertical\"\n  } else if (firstHit[1] === secondHit[1]) {\n    //yCoors are constant\n    return \"horizontal\"\n  }\n}\n\nconst getExtremeCoor = function(maxOrMin) {\n  if (orientation === \"horizontal\") {\n    //For horizontal orientation, return max/min x-coordinate\n    return hitPositions.map(pos => pos[0]).reduce((prevCoor, currentCoor) => {\n      return Math[maxOrMin](prevCoor, currentCoor)\n    });\n  } else if (orientation === \"vertical\") {\n    //For vertical orientation, return max/min y-coordinate\n    return hitPositions.map(pos => pos[1]).reduce((prevCoor, currentCoor) => {\n      return Math[maxOrMin](prevCoor, currentCoor)\n    });\n  }\n}\n\n\n//Return hypothetical positions agnostic of adjacent hits/misses, or even off-the-board positions\nconst calculateHypotheticalPositions = function() {\n  if (orientation === \"vertical\") {\n    const constantXCoor = hitPositions[0][0];\n    return [\n      [constantXCoor, getExtremeCoor(\"max\") + 1],\n      [constantXCoor, getExtremeCoor(\"min\") - 1]\n    ]\n  } else if (orientation === \"horizontal\") {\n    const constantYCoor = hitPositions[0][1];\n    return [\n      [getExtremeCoor(\"max\") + 1, constantYCoor],\n      [getExtremeCoor(\"min\") - 1, constantYCoor]\n    ]\n  } else {\n    const xCoor = hitPositions[0][0];\n    const yCoor = hitPositions[0][1];\n    return [\n      [xCoor, yCoor + 1],\n      [xCoor, yCoor - 1],\n      [xCoor + 1, yCoor],\n      [xCoor - 1, yCoor]\n    ]\n  }\n}\n\nconst addHitPosition = function(position) {\n  hitPositions.push(position);\n  //If this is the second hit position to be added, set the orientation if necessary\n  if (hitPositions.length === 2 && !orientation) {\n    orientation = determineOrientation();\n  }\n}\n  return {\n    get ship() {\n      return ship;\n    },\n    addHitPosition,\n    get hypotheticalPositions() {\n      return calculateHypotheticalPositions();\n    },\n    get initialHitPosition() {\n      return hitPositions[0]\n    },\n    get hasOrientation() {\n      return !!orientation\n    },\n    set orientation(or) {\n      orientation = or;\n    }  \n  }\n}\n\n\nmodule.exports = ExposedTarget;","const Player = require(\"./Player\");\nconst Gameboard = require(\"./Gameboard\");\nconst initializeBoards = require(\"../interface/initializeBoards\");\n\nfunction Game(gameObjects) {\n  const humanGameboard = gameObjects.gameboards.human\n  const computerGameboard = gameObjects.gameboards.computer\n  const humanPlayer = gameObjects.players.human\n  const computerPlayer = gameObjects.players.computer\n  let victor;\n  let attackReportMessage;\n\n  const illegalHumanMoveMessage = function(humanCoors) {\n    return humanPlayer.illegalMoveMessage(humanCoors)\n  }\n\n  const takeShot = function(coors, playerIsComputer) {\n    let offensivePlayer\n    let defensiveGameboard;\n\n    if (playerIsComputer) {\n      offensivePlayer = computerPlayer;\n      defensiveGameboard = humanGameboard;\n    } else {\n      offensivePlayer = humanPlayer;\n      defensiveGameboard = computerGameboard;\n    }\n\n    //call receiveAttack on defensive Gameboard\n    defensiveGameboard.receiveAttack(coors);\n    //call getAttackReport on defensive Gameboard\n    const attackReport = defensiveGameboard.attackReport;\n    //call receiveReport on offensive Player\n    offensivePlayer.receiveReport(attackReport);\n    //Set the current attackReportMessage\n    attackReportMessage = attackReport.message\n    //call allSunk on defensive Gameboard to check for victory\n    if (defensiveGameboard.allSunk()) {\n      victor = offensivePlayer\n    }\n  }\n\n \n\n\n  return {\n    get victor() {\n      return victor\n    },\n    get computerMove() {\n      return computerPlayer.getComputerMove()\n    },\n    get allShots() {\n      return {\n        human: humanPlayer.shots,\n        computer: computerPlayer.shots\n      }\n    },\n    get attackReportMessage() {\n      return attackReportMessage\n    },\n    get humanShipDetailsArray() {\n      return humanGameboard.shipDetailsArray;\n    },\n    illegalHumanMoveMessage,\n    takeShot\n  }\n}\n\nmodule.exports = Game;","const AttackReport = require(\"./AttackReport\");\n\nfunction Gameboard() {\n  const shipDetailsArray = [];\n  let attackReport = {};\n  \n  const getHitShipDetails = function(targetCoors) {\n    return shipDetailsArray.find(shipDetails => {\n      return shipDetails.matches(targetCoors)\n    })\n  }\n  \n  const receiveAttack = function(targetCoors) {\n    const hitShipDetails = getHitShipDetails(targetCoors);\n    if (hitShipDetails) {\n      //If a ship is hit, call the hit method on the hitShip\n      hitShipDetails.markPositionHit(targetCoors);\n    } \n    //Update the attackReport\n    setAttackReport(targetCoors, hitShipDetails);\n  }\n\n  const setAttackReport = function(coors, hitShipDetails) {\n    attackReport = (\n      hitShipDetails ? AttackReport(coors, hitShipDetails.ship) : AttackReport(coors)\n    )\n  }\n\n  const allSunk = function() {\n    if (shipDetailsArray.length === 0) {\n      return false\n    } else {\n      return shipDetailsArray.every(shipDetails => shipDetails.ship.isSunk())\n    }\n  }\n\n  // Create new Ship object and add to ships unless\n  // out of bounds\n  const placeShip = function(shipDetails) {\n    shipDetailsArray.push(shipDetails)\n  }\n\n  \n  return {\n    get shipDetailsArray() {\n      return shipDetailsArray;\n    },\n    get attackReport() {\n      return attackReport;\n    },\n    placeShip, \n    receiveAttack,\n    allSunk\n  }\n}\n\nmodule.exports = Gameboard;","const coordinatesExist = require(\"../helpers/coordinatesExist\");\nconst ExposedTarget = require(\"../factories/ExposedTarget\");\n\nfunction Player(isComputer) {\n  const shots = {\n    hit: [],\n    missed: [],\n    sunk: []\n  }\n\n  const exposedTargets = [];\n   \n  const illegalMoveMessage = function(coors) {\n    if (!coordinatesExist(coors)) {\n      return \"Those coordinates are nonexistant\"\n    } else if (includesCoordinates(shots.hit, coors)) {\n      return \"Those coordinates have already been hit\"\n    } else if (includesCoordinates(shots.missed, coors)) {\n      return \"Those coordinates have already been shot at and missed\"\n    } \n  }\n\n\n  const includesCoordinates = function(shotsArray, testCoors) {\n    return !!shotsArray.map(shot => shot.coors).find(coordinates => {\n      return (\n        testCoors[0] === coordinates[0] &&\n        testCoors[1] === coordinates[1]\n      )\n    })\n  }\n\n  \n  const determineOrientation = function(ship, initialHitPosition) {\n    const allShots = shots.hit.concat(shots.missed);\n    \n    //Start at the initialHitPosition, and go to the right until an attacked position is found\n    let righthandBoundary = [...initialHitPosition];\n    righthandBoundary[0]++;\n    while (\n      !includesCoordinates(allShots, righthandBoundary) &&\n       coordinatesExist(righthandBoundary)\n    ) {\n      righthandBoundary[0]++;\n    } \n\n    //Start at the initialHitPosition, and go to the left until an attacked position is found\n    let lefthandBoundary = [...initialHitPosition];\n    lefthandBoundary[0]--;\n    while (\n      !includesCoordinates(allShots, lefthandBoundary) &&\n      coordinatesExist(lefthandBoundary)\n    ) {\n      lefthandBoundary[0]--;\n    } \n\n    //Start at the initialHitPosition, and go up until an attacked position is found\n    let upperBoundary = [...initialHitPosition];\n    upperBoundary[1]++;\n    while (\n      !includesCoordinates(allShots, upperBoundary) &&\n      coordinatesExist(upperBoundary)\n    ) {\n      upperBoundary[1]++;\n    } \n\n    //Start at the initialHitPosition, and go down until an attacked position is found\n    let lowerBoundary = [...initialHitPosition];\n    lowerBoundary[1]--;\n    while (\n      !includesCoordinates(allShots, lowerBoundary) &&\n      coordinatesExist(lowerBoundary)\n    ) {      \n      lowerBoundary[1]--\n    } \n\n    const horizontalSpace = righthandBoundary[0] - lefthandBoundary[0] - 1;\n    const verticalSpace = upperBoundary[1] - lowerBoundary[1] - 1;\n    if (horizontalSpace < ship.length) {\n      //If there's not enough potential horizontal space, the orientation must be vertical\n      return \"vertical\";\n    } else if (verticalSpace < ship.length) {\n      //If there's not enough potential horizontal space, the orientation must be vertical\n      return \"horizontal\";\n    }\n  }\n\n\n  const createNewTarget = function(ship, initialHitPosition) {\n    const orientation = determineOrientation(ship, initialHitPosition);\n    return ExposedTarget(ship, orientation)\n  }\n\n  const addOrUpdateTarget = function(ship, hitPosition) {\n    let target = exposedTargets.find(tar => tar.ship.name === ship.name);\n    if (!target) {\n      //If target does not exist, initialize it and add it to exposedTargets\n      target = createNewTarget(ship, hitPosition)\n      exposedTargets.push(target)\n    }\n    target.addHitPosition(hitPosition);\n  }\n\n  const removeTarget = function(ship) {\n    const exposedTargetNames = exposedTargets.map(target => target.ship.name)\n    const targetIndex = exposedTargetNames.indexOf(ship.name)\n    exposedTargets.splice(targetIndex, 1);\n  }\n\n  const updateOrientation = function(target) {\n    if (!target.hasOrientation) {\n      const ship = target.ship;\n      const initialHitPosition = target.initialHitPosition\n      target.orientation = determineOrientation(ship, initialHitPosition);\n    }\n  }\n\n  const updateComputerStrategy = function(attackReport) {\n    if (attackReport.sunk) {\n      removeTarget(attackReport.ship)\n    } else if (attackReport.hit) {\n      addOrUpdateTarget(attackReport.ship, attackReport.coors)\n    } else if (!attackReport.hit && exposedTargets.length > 0) {\n      //If there is an existing target, but the attack is a miss,\n      //update the orientation for each target if possible\n      exposedTargets.forEach(target => updateOrientation(target))\n    }\n  }\n\n  const getRandomMove = function() {\n    let computerMove;\n    //return an array with 2 coordinates between 1 and 10 that isn't\n    //in the hitShots or missedShots arrays\n    do {\n      computerMove = [\n        Math.floor(Math.random() * 10 + 1),\n        Math.floor(Math.random() * 10 + 1)\n      ]\n    } while (includesCoordinates(shots.hit.concat(shots.missed), computerMove))   \n    return computerMove;\n  }\n\n\n  const getComputerMove = function() {\n    if (exposedTargets.length === 0) {\n      return getRandomMove();\n    } else {\n      const currentTarget = exposedTargets[0];\n      //Return a hypothetical position that hasn't been attacked and is on the board\n      return currentTarget.hypotheticalPositions.find(position => {\n        return (\n          !includesCoordinates(shots.hit.concat(shots.missed), position) &&\n          coordinatesExist(position)\n        )\n      })\n    }\n  }\n\n  const getShipCoordinates = function(shipName) {\n    return shots.hit.filter(shot => {\n      return shot.ship.name === shipName\n    }).map(shot => shot.coors)\n  }\n\n  const receiveReport = function(attackReport) {\n    //Add shot to either shots.hit or shots.missed\n    if (attackReport.hit) {\n      shots.hit.push(attackReport)\n    } else  {\n      shots.missed.push(attackReport)\n    }\n\n    //If the shot has sunk target, add shot to shots.sunk\n    if(attackReport.sunk) {\n      //Add shipCoors property\n      attackReport.shipCoors = getShipCoordinates(attackReport.ship.name)\n      shots.sunk.push(attackReport)\n    }\n\n    //If the player is the computer, record the necessary details for strategy\n    if (isComputer) {\n      updateComputerStrategy(attackReport);\n    }\n  }\n\n  \n\n\n  return {\n    illegalMoveMessage, \n    getComputerMove, \n    receiveReport, \n    get shots() {\n      return shots\n    }, \n    isComputer\n  }\n  \n}\n\nmodule.exports = Player;\n","function Ship(name) {\n  const SHIPLENGTHS = {\n    \"Patrol Boat\": 2,\n    \"Submarine\": 3,\n    \"Destroyer\": 3,\n    \"Battleship\": 4,\n    \"Carrier\": 5\n  }\n\n  const length = SHIPLENGTHS[name]\n  //Initialize an array as long as the ship, \n  //with each position starting out as false (not hit)\n  const positionsHit = Array(length).fill(false)\n  \n  //Set the given position as hit\n  const hit = (positionIndex) => positionsHit[positionIndex] = true\n \n  //Check whether all positions are hit\n  const isSunk = () => positionsHit.every(Boolean);\n  \n  return {\n    hit, \n    isSunk, \n    get length() {\n      return length\n    }, \n    get name() {\n      return name\n    }\n  }\n}\n\nmodule.exports = Ship;","module.exports = function ShipDetails(positions, ship) {\n  const matches = function(testPosition) {\n    return positions.some(iteratedPos => positionsAreEqual(iteratedPos, testPosition))\n  }\n\n  const positionsAreEqual = function(pos1, pos2) {\n    return (pos1[0] === pos2[0] && pos1[1] === pos2[1])\n  }\n\n  const getPositionIndex = function(testPosition) {\n    return positions.findIndex(pos => positionsAreEqual(pos, testPosition))\n  }\n\n  const markPositionHit = function(targetPosition) {\n    const positionIndex = getPositionIndex(targetPosition);\n    ship.hit(positionIndex)\n  }\n\n\n  return {ship, positions, matches, markPositionHit}\n}","module.exports = function coordinatesExist(coors) {\n  return (\n    coors[0] <= 10 &&       \n    coors[0] >= 1 &&\n    coors[1] <= 10 &&\n    coors[1] >= 1\n  )\n}","const Player = require(\"../factories/Player\")\nconst Gameboard = require(\"../factories/Gameboard\")\nconst Ship = require(\"../factories/Ship\")\nconst setupDisplay = require(\"../interface/setupDisplay\")\nconst ShipDetails = require(\"../factories/ShipDetails\")\nconst initializeBoards = require(\"../interface/initializeBoards\");\nconst possiblePositions = require(\"./possiblePositions\");\nconst getOccupiedPositions = require(\"./getOccupiedPositions\");\n\n\n\n\n  const buildPlayers = function() {\n    return {\n      human: Player(),\n      computer: Player(true)\n    }\n  }\n\n\n  const buildShipDetailsArray = async function(shipDetailsArray) {\n    setupDisplay.askForShipSelection(shipDetailsArray);\n    const shipName = await setupDisplay.selectShipToPlace();\n    //In case of ship 're-placement, remove ship's positions from shipsDetailsArray\n    //and remove the 'placed' \n    const newShipDetailsArray = shipDetailsArray.filter(shipDetails => {\n      return shipDetails.ship.name !== shipName\n    })\n    setupDisplay.removePlacedClass(shipName);\n    const shipDetails = await buildShipDetails(newShipDetailsArray, shipName);\n    //Add positions to the appropriate ship name in newShipsPositions\n    newShipDetailsArray.push(shipDetails);\n    //update board\n    initializeBoards.fillGameboards(newShipDetailsArray)\n    //if not all ships have been given ShipDetails, return buildShipDetailsArray (recurse)\n    if (newShipDetailsArray.length < 5) {\n      return buildShipDetailsArray(newShipDetailsArray)\n    } else {\n      //If all ships have positions, return newShipsPositions\n      return newShipDetailsArray\n    }\n  }\n\n  const buildShipDetails = async function(shipDetailsArray, shipName) {\n    //update board\n    initializeBoards.fillGameboards(shipDetailsArray)\n    //Create the ship\n    const newShip = Ship(shipName);\n    //Get the start position\n    setupDisplay.askForStartPosition();\n    const occupiedPositions = getOccupiedPositions(shipDetailsArray);\n    const possibleStartPositions = (\n      possiblePositions.calculateStartPositions(occupiedPositions, newShip.length)\n    );\n    const startPos = await setupDisplay.getPosition(possibleStartPositions);\n    //Get the end position\n    const possibleEndPositions = (\n      possiblePositions.calculateEndPositions(occupiedPositions, newShip.length, startPos)\n    )\n    setupDisplay.askForEndPosition();\n    const endPos = await setupDisplay.getPosition(possibleEndPositions);\n    //Calculate the intervening positions\n    positions = possiblePositions.getPositionsFromEndpoints(startPos, endPos)\n    return ShipDetails(positions, newShip)\n  }\n\n  \n\n  const buildHumanGameboard = async function() {\n    setupDisplay.askForShipsPlacement();\n    const shipDetailsArray = await buildShipDetailsArray([]);\n    //Create gameboard\n    const humanGameboard = Gameboard();\n    //Place ships\n    shipDetailsArray.forEach(shipDetails => {\n      humanGameboard.placeShip(shipDetails);\n    })\n    //Clean up from ships placement request\n    setupDisplay.removeShipsPlacement();\n    return humanGameboard\n  }\n\n  const buildComputerGameboard = function() {\n    //Create the gameboard\n    const gameboard = Gameboard();\n\n    //Create the ships\n    const ships = [\n      Ship(\"Patrol Boat\"),\n      Ship(\"Submarine\"),\n      Ship(\"Destroyer\"),\n      Ship(\"Battleship\"),\n      Ship(\"Carrier\")\n    ]\n\n    //Get the positions of the ships\n    const shipDetailsArray = ships.reduce((shipDetailsArray, ship) => {\n      const occupiedPositions = (\n        shipDetailsArray.map(shipDetails => shipDetails.positions).flat()\n      );\n\n      const newPositions = (\n        possiblePositions.getComputerPlacement(occupiedPositions, ship.length)\n      );\n\n      return shipDetailsArray.concat(ShipDetails(newPositions, ship))\n    }, [])\n\n    //Place the ships\n    shipDetailsArray.forEach(shipDetails => gameboard.placeShip(shipDetails))\n    return gameboard\n  }\n\n  const buildGameboards = async function() {\n    const computerGameboard = buildComputerGameboard();\n    const humanGameboard = await buildHumanGameboard();\n    return {\n      human: humanGameboard,\n      computer: computerGameboard\n    }\n  }\n\n\n\n\n  const createGameObjects = async function() {\n    //initialize board\n    initializeBoards.fillGameboards([])\n    //Create game objects\n    const players = buildPlayers();\n    const gameboards = await buildGameboards();\n    return {players, gameboards}\n  }\n\n\nmodule.exports = createGameObjects;","module.exports = function getOccupiedPositions(shipsDetailsArray) {\n  return shipsDetailsArray.map(shipDetails => shipDetails.positions).flat();\n}","const getPositionDivFromCoors = function(coors, gameboardPositions) {\n  return gameboardPositions[((coors[0] - 1) * 10 + coors[1] - 1)];\n}\n\nconst applyToPositions = function(coorsSet, gameboardPositions, callback, callbackArgs) {\n  coorsSet.forEach(coors => {\n    callback(getPositionDivFromCoors(coors, gameboardPositions), ...callbackArgs);\n  });\n}\n\nconst applyArrayToPositions = function(coors, gameboardPositions, callback, array) {\n  coors.forEach((coors, idx) => {\n    callback(getPositionDivFromCoors(coors, gameboardPositions), array[idx]);\n  });\n}\n\nconst addClassToPosition = (position, className) => position.classList.add(className);\n\nconst addInitialToPosition = (position, initial) => position.textContent = initial;\n\nmodule.exports = {\n  getPositionDivFromCoors,\n  applyToPositions, \n  applyArrayToPositions, \n  addClassToPosition, \n  addInitialToPosition\n}","const coordinatesExist = require(\"./coordinatesExist\");\n\n\nconst includesPosition = function(positionsArray, testPosition) {\n  return !!positionsArray.some(position => {\n    return (\n      testPosition[0] === position[0] &&\n      testPosition[1] === position[1]\n    )\n  })\n}\n\nconst calculateOrientations = function(shipLength, startPos) {\n  //Create the 'up' orientation\n  const upOrientation = []\n  for(let i = 0; i < shipLength; i++) {\n    upOrientation.push([startPos[0], startPos[1] + i])\n  }\n\n  //Create the 'down' orientation\n  const downOrientation = []\n  for(let i = 0; i < shipLength; i++) {\n    downOrientation.push([startPos[0], startPos[1] - i])\n  }\n\n  //Create the 'right' orientation\n  const rightOrientation = []\n  for(let i = 0; i < shipLength; i++) {\n    rightOrientation.push([startPos[0] + i, startPos[1]])\n  }\n\n  //Create the 'left' orientation\n  const leftOrientation = []\n  for(let i = 0; i < shipLength; i++) {\n    leftOrientation.push([startPos[0] - i, startPos[1]])\n  }\n\n  return [upOrientation, downOrientation, rightOrientation, leftOrientation]\n}\n\nconst calculateEndPositions = function(occcupiedPositions, shipLength, startPos) {\n  const orientations = calculateOrientations(shipLength, startPos);\n  //eliminate orientations that overlap with occupiedPositions or which go off the board\n  const legalOrientations = orientations.filter(orientation => {\n    return !orientation.some(position => {\n      return includesPosition(occcupiedPositions, position) || !coordinatesExist(position)\n    })\n  })\n  return legalOrientations.map(orientation => orientation[orientation.length - 1]);\n}\n\nconst isViableStartPosition = function(occupiedPositions, shipLength, startPos) {\n   //Check if start position is unoccupied and has at least one end viable end position\n  return (\n    !includesPosition(occupiedPositions, startPos) &&\n    (calculateEndPositions(occupiedPositions, shipLength, startPos).length > 0)\n  )\n}\n\n\n\nconst calculateStartPositions = function(occupiedPositions, shipLength) {\n  const startPositions = [];\n  for(let i = 1; i < 11; i++) {\n    for(let j = 1; j < 11; j++) {\n      const pos = [i, j]\n      if (isViableStartPosition(occupiedPositions, shipLength, pos) ) {\n        startPositions.push(pos)\n      }\n    }\n  }\n  return startPositions\n}\n\nconst getPositionsFromEndpoints = function(startPos, endPos) {\n  const positions = [];\n  if (startPos[0] === endPos[0]) {\n    //Vertical cases\n    const xCoor = startPos[0]\n    if (startPos[1] < endPos[1]) {\n      //Up case\n      for (let yCoor = startPos[1]; yCoor <= endPos[1]; yCoor++) {\n        positions.push([xCoor, yCoor])\n      }\n    } else if (startPos[1] > endPos[1]) {\n      //Down case\n      for (let yCoor = startPos[1]; yCoor >= endPos[1]; yCoor--) {\n        positions.push([xCoor, yCoor])\n      }\n    }\n  } else if (startPos[1] === endPos[1]) {\n    //Horizontal cases\n    const yCoor = startPos[1]\n    if (startPos[0] < endPos[0]) {\n      //Right case\n      for (let xCoor = startPos[0]; xCoor <= endPos[0]; xCoor++) {\n        positions.push([xCoor, yCoor])\n      }\n    } else if (startPos[0] > endPos[0]) {\n      //Left case\n      for (let xCoor = startPos[0]; xCoor >= endPos[0]; xCoor--) {\n        positions.push([xCoor, yCoor])\n      }\n    }\n  }\n\n  return positions;\n}\n\nconst randomElementFromArray = function(array) {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  return array[randomIndex]\n}\n\nconst getComputerPlacement = function(occupiedPositions, shipLength) {\n  //Calculate a random start position\n  const possibleStartPositions = calculateStartPositions(occupiedPositions, shipLength)\n  const startPos = randomElementFromArray(possibleStartPositions);\n\n  //Calculate a random end position\n  const possibleEndPositions = calculateEndPositions(occupiedPositions, shipLength, startPos)\n  const endPos = randomElementFromArray(possibleEndPositions);\n\n  return getPositionsFromEndpoints(startPos, endPos);\n}\n\n\nmodule.exports = {\n  calculateStartPositions,\n  calculateOrientations,\n  calculateEndPositions,\n  getPositionsFromEndpoints,\n  getComputerPlacement\n}","module.exports = function(type, className, text) {\n  const el = document.createElement(type);\n  el.className = className;\n  if (text) {el.textContent = text;}\n  return el;\n}","const createCustomElement = require(\"./createCustomElement.js\")\nconst {\n  applyToPositions, \n  applyArrayToPositions, \n  addClassToPosition, \n  addInitialToPosition\n} = require(\"../helpers/positionHelpers\")\n\n\n\n\nconst updateBoard = function(allShots, playerIsComputer) {\n  const offensiveName = (playerIsComputer ? \"computer\" : \"human\")\n  const defensiveName = (playerIsComputer ? \"human\" : \"computer\")\n\n  //Get the gameboard positions DOMCollection of the defensive player\n  const defensiveGameboard = document.getElementById(`${defensiveName}-gameboard`)\n  const gameboardPositions = defensiveGameboard.getElementsByClassName(\"position\")\n\n  //Add the appropriate class to \"missed\" positions\n  const missedCoors = allShots[offensiveName].missed.map(shot => shot.coors)\n  applyToPositions(missedCoors, gameboardPositions, addClassToPosition, [\"missed\"])\n\n  //Add the appropriate class to \"hit\" positions\n  //Insert the initial of the hit ship into the \"hit\" positions\n  const hitCoors = allShots[offensiveName].hit.map(shot => shot.coors);\n  const hitShipsInitials = allShots[offensiveName].hit.map(shots => shots.ship.name[0]);\n  applyToPositions(hitCoors, gameboardPositions, addClassToPosition, [\"hit\"])\n  applyArrayToPositions(hitCoors, gameboardPositions, addInitialToPosition, hitShipsInitials)\n  \n  //Add the appropriate class to \"sunk\" positions\n  const sunkCoors = allShots[offensiveName].sunk.map(shot => shot.shipCoors).flat();\n  applyToPositions(sunkCoors, gameboardPositions, addClassToPosition, [\"sunk\"])\n}\n\n\n\nconst displayMessage = function(wrapperId, messageId, message, timeout) {\n  //Insert message into message element\n  const wrapperEl = document.getElementById(wrapperId);\n  wrapperEl.textContent = \"\";\n  const messageEl = createCustomElement(\"DIV\", \"message\", message);\n  messageEl.id = messageId;\n  wrapperEl.appendChild(messageEl)\n\n  if (timeout) {\n    //disappear message after 3s\n    setTimeout(() => {\n      messageEl.remove();\n    }, 3000)\n  }\n}\n\n\n\nconst displayComputerResponse = function(message) {\n  displayMessage(\"computer-response-wrapper\", \"computer-response\", message, true)\n}\n\nconst addNewGameBtn = function(startNewGame) {\n  //Create button\n  const newGameBtn = createCustomElement(\"BUTTON\", \"\", \"New Game\");\n  newGameBtn.id = \"new-game-btn\";\n  //Attach listener\n  newGameBtn.addEventListener(\"click\", () => {\n    //Remove button, clean out victory message, and start new game\n    newGameBtn.remove();\n    removeVictoryMessage();\n    startNewGame();\n  })\n  //Append button\n  const victoryDisplay = document.getElementById(\"victory-display\");\n  victoryDisplay.appendChild(newGameBtn);\n}\n\nconst displayVictory = function(victor, startNewGame) {\n  let message;\n  if (victor.isComputer) {\n    message = \"Rats! Computer wins...\"\n  } else {\n    message = \"Congratulations, you win!\"\n  }\n  //Display the victory message\n  displayMessage(\"victory-message-wrapper\", \"victory-message\", message)\n\n  addNewGameBtn(startNewGame);\n}\n\nconst removeVictoryMessage = function() {\n  const victoryMessageWrapper = document.getElementById(\"victory-message-wrapper\");\n  victoryMessageWrapper.textContent = \"\";\n}\n\nconst displayGameInstruction = function() {\n  const gameInstructionWrapper = document.getElementById(\"game-instruction-wrapper\");\n  const gameInstruction = createCustomElement(\"SPAN\", \"message\", \"Click on positions on the target board to make shots\");\n  gameInstruction.id = \"game-instruction\";\n  gameInstructionWrapper.appendChild(gameInstruction);\n}\n\nconst removeGameInstruction = function() {\n  const gameInstructionWrapper = document.getElementById(\"game-instruction-wrapper\");\n  gameInstructionWrapper.textContent = \"\";\n}\n\nmodule.exports = {\n  updateBoard, \n  displayVictory, \n  displayComputerResponse,\n  displayGameInstruction,\n  removeGameInstruction\n}","const createCustomElement = require(\"./createCustomElement.js\");\nconst {\n  applyToPositions, \n  applyArrayToPositions, \n  addClassToPosition, \n  addInitialToPosition\n} = require(\"../helpers/positionHelpers\")\n\nconst ROWINDICES = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n\nconst wipeBoard = function(board) {\n  board.textContent = \"\";\n}\n\nconst createPositionEl = function(coordinates) {\n  const positionEl = createCustomElement(\"DIV\", \"position\")\n  positionEl.dataset.xCoor = coordinates[0];\n  positionEl.dataset.yCoor = coordinates[1];\n  return positionEl\n}\n\nconst createRowIndexDiv = function(index) {\n  return createCustomElement(\"DIV\", \"row-index\", ROWINDICES[index]);\n}\n\nconst createColumnIndex = function(index) {\n  return createCustomElement(\"DIV\", \"column-index\", index + 1);\n}\n\nconst createEmptyCorner = function() {\n  return createCustomElement(\"DIV\", \"empty-corner\")\n}\n\n\nconst fillGameboards = function(shipDetailsArray) {\n  \n  const humanGameboard = document.getElementById(\"human-gameboard\")\n  const computerGameboard = document.getElementById(\"computer-gameboard\")\n\n\n  //Begin by wiping both boards\n  wipeBoard(humanGameboard);\n  wipeBoard(computerGameboard);\n\n  //Create the column index row\n  humanGameboard.appendChild(createEmptyCorner())\n  computerGameboard.appendChild(createEmptyCorner())\n  for (let i = 0; i < 10; i++) {\n    //Add the column index\n    humanGameboard.appendChild(createColumnIndex(i))\n    computerGameboard.appendChild(createColumnIndex(i))\n  }\n\n  //Create the main rows\n  for (let i = 0; i < 10; i++) {\n    // Add the row index to both gameboards\n    humanGameboard.appendChild(createRowIndexDiv(i))\n    computerGameboard.appendChild(createRowIndexDiv(i));\n    //Add a row of position divs to both gameboards\n    for (let j = 0; j < 10; j++ ) {\n      humanGameboard.appendChild(createPositionEl([i + 1, j + 1]))\n      computerGameboard.appendChild(createPositionEl([i + 1, j + 1]));\n    }\n  }\n\n  \n  const humanPositions = humanGameboard.getElementsByClassName(\"position\");\n  if (shipDetailsArray.length > 0) {\n    shipDetailsArray.forEach(shipDetails => {\n      //Add the ships initials to occupied positions if there are any ships\n      applyToPositions(\n        shipDetails.positions,\n        humanPositions, \n        addInitialToPosition, \n        [shipDetails.ship.name[0]]\n      )\n\n      applyToPositions(\n        shipDetails.positions,\n        humanPositions,\n        addClassToPosition,\n        [\"occupied\"]\n      )\n    })\n  }\n}\n\n\n\nconst attachPositionListeners = function(takeRound) {\n  const positionEls = document.getElementById(\"computer-gameboard\")\n                              .getElementsByClassName(\"position\");\n                              \n  for (i = 0; i < positionEls.length; i++) {\n    //Attach the listener\n    positionEls[i].addEventListener(\"click\", (e) => {\n      const xCoordinate = parseInt(e.target.dataset.xCoor);\n      const yCoordinate = parseInt(e.target.dataset.yCoor);\n      takeRound([xCoordinate, yCoordinate])\n    })\n\n    positionEls[i].classList.add(\"active\")\n  }\n}\n\nmodule.exports = {fillGameboards, attachPositionListeners}","const createCustomElement = require(\"./createCustomElement\");\nconst positionHelpers = require(\"../helpers/positionHelpers\");\n\n\nconst askForShipsPlacement = function() {\n\tconst shipsPlacementWrapper = document.getElementById(\"ships-placement-wrapper\");\n\n\t//Create the parent element\n\tconst shipsPlacementDiv = document.createElement(\"DIV\");\n\tshipsPlacementDiv.id = \"ships-placement\";\n\n\t//Add the instruction element\n\tconst placementMessage = createCustomElement(\"SPAN\", \"message\");\n\tplacementMessage.id = \"placement-message\"\n\tshipsPlacementWrapper.appendChild(placementMessage);\n\n\t//Add the ship placement buttons\n\tconst shipLabels = [ \n\t\t{name: \"Patrol Boat\", length: \"(2)\"},\n\t\t{name: \"Submarine\", length: \"(3)\"},\n\t\t{name: \"Destroyer\", length: \"(3)\"},\n\t\t{name: \"Battleship\", length: \"(4)\"},\n\t\t{name: \"Carrier\", length: \"(5)\"}\n\t]\n\n\n\tconst shipPlacementBtns = shipLabels.map(shipLabel => {\n\t\tconst btn = createCustomElement(\"DIV\", \"ship-placement-btn\")\n\t\tconst nameEl = createCustomElement(\"SPAN\", \"name\", shipLabel.name)\n\t\tconst lengthEl = createCustomElement(\"SPAN\", \"length\", shipLabel.length)\n\t\tbtn.appendChild(nameEl);\n\t\tbtn.appendChild(lengthEl);\n\t\tbtn.dataset.shipName = shipLabel.name\n\t\treturn btn;\n\t})\n\tshipPlacementBtns.forEach(btn => {\n\t\tshipsPlacementDiv.appendChild(btn)\n\t})\n\n\t//Add the parent element to the wrapper element\n\tshipsPlacementWrapper.appendChild(shipsPlacementDiv);\n}\n\nconst askForShipSelection = function(shipDetailsArray) {\n\t//Update placement message\n\tconst placementMessage = document.getElementById(\"placement-message\");\n\tplacementMessage.textContent = \"Click one of the ships to place on the board\";\n\n\t//Add 'placed' class to buttons of placed ships (remove it from a ship that is being 're-placed')\n\tconst shipPlacementBtns = document.getElementsByClassName(\"ship-placement-btn\");\n\tconst placedShipNames = shipDetailsArray.map(shipDetails => shipDetails.ship.name)\n\tArray.from(shipPlacementBtns).forEach(btn => {\n\t\tif (placedShipNames.includes(btn.dataset.shipName)) {\n\t\t\tbtn.classList.add(\"placed\")\n\t\t}\n\t})\n}\n\nconst removePlacedClass = function(shipName) {\n\tconst shipPlacementBtns = document.getElementsByClassName(\"ship-placement-btn\");\n\tArray.from(shipPlacementBtns).forEach(btn => {\n\t\tif (btn.dataset.shipName === shipName) {\n\t\t\tbtn.classList.remove(\"placed\");\n\t\t}\n\t})\n}\n\nconst selectShipToPlace = function() {\n\tconst shipPlacementBtns = document.getElementsByClassName(\"ship-placement-btn\");\n\treturn new Promise((resolve) => {\n\t\t//resolve with the shipName of the first clicked btn\n\t\tArray.from(shipPlacementBtns).forEach(btn => {\n\t\t\tbtn.addEventListener(\"click\", (e) => {\n\t\t\t\te.currentTarget.classList.add(\"selected\")\n\t\t\t\tresolve(e.currentTarget.dataset.shipName)\n\t\t\t})\n\t\t})\n\t})\n}\n\nconst askForStartPosition = function() {\n\tconst placementMessage = document.getElementById(\"placement-message\");\n\tplacementMessage.textContent = \"Click the board to select one endpoint\"\n}\n\n\n\nconst getPosition = function(possiblePositions) {\n\n\t//Get the elements of the corresponding possibleStartPositions\n\tconst gameboardPositions = document.getElementById(\"human-gameboard\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.getElementsByClassName(\"position\");\n\n\tconst possiblePositionDivs = possiblePositions.map(position => {\n\t\treturn positionHelpers.getPositionDivFromCoors(position, gameboardPositions)\n\t})\n\n\t//Attach a 'selectable' class to each element\n\tpossiblePositionDivs.forEach(div => {\n\t\tdiv.classList.add(\"selectable\")\n\t})\n\n\treturn new Promise((resolve) => {\n\t\t//Define handler\n\t\tconst handleClick = function(e) {\n\t\t\t//Remove the 'selectable' class from all of the formerly selectable positions\n\t\t\tpossiblePositionDivs.forEach(div => {\n\t\t\t\tdiv.classList.remove(\"selectable\")\n\t\t\t\tdiv.removeEventListener(\"click\", handleClick)\n\t\t\t})\n\t\t\t//Add the 'selected' class to the clicked element\n\t\t\te.target.classList.add(\"selected\");\n\t\t\t//resolve with the coors of the first clicked position div\n\t\t\tresolve([parseInt(e.target.dataset.xCoor), parseInt(e.target.dataset.yCoor)])\n\t\t}\n\t\t//Attach handler\n\t\tpossiblePositionDivs.forEach(div => {\n\t\t\tdiv.addEventListener(\"click\", handleClick)\n\t\t})\n\t})\n}\n\nconst askForEndPosition = function() {\n\tconst placementMessage = document.getElementById(\"placement-message\");\n\tplacementMessage.textContent = \"Click one of the possible other endpoints\"\n}\n\nconst removeShipsPlacement = function() {\n\tconst shipsPlacementWrapper = document.getElementById(\"ships-placement-wrapper\");\n\tshipsPlacementWrapper.textContent = \"\";\n}\n\n\n\nmodule.exports = {\n\taskForShipsPlacement,\n\taskForShipSelection,\n\tremovePlacedClass,\n\tselectShipToPlace,\n\taskForStartPosition,\n\tgetPosition,\n\taskForEndPosition,\n\tremoveShipsPlacement\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","require(\"./style/style.css\")\nconst Game = require(\"./factories/Game\");\nconst createGameObjects = require(\"./helpers/createGameObjects\")\nconst initializeBoards = require(\"./interface/initializeBoards\")\nconst gameplayDisplay = require(\"./interface/gameplayDisplay\");\n\n\nlet currentGame;\n\nconst setupGame = async function() {\n  const gameObjects = await createGameObjects();\n  currentGame = Game(gameObjects);\n  //Set up DOM boards\n  initializeBoards.fillGameboards(currentGame.humanShipDetailsArray);\n  initializeBoards.attachPositionListeners(takeRound);\n  //Display basic game instruction\n  gameplayDisplay.displayGameInstruction();\n}\n\nconst takeTurn = function(coors, playerIsComputer) {\n  //Record the shot in the game object\n  currentGame.takeShot(coors, playerIsComputer)\n  \n  //Update the board in the UI\n  gameplayDisplay.updateBoard(currentGame.allShots, playerIsComputer);\n\n  //Display attackReportMessage if this is the human's turn\n  if (!playerIsComputer) {\n    gameplayDisplay.displayComputerResponse(currentGame.attackReportMessage)\n  }\n}\n\nconst takeComputerTurn = function() {\n  const computerCoors = currentGame.computerMove;\n  takeTurn(computerCoors, true);\n  if (currentGame.victor) {\n    declareVictory();\n  }\n}\n\nconst declareVictory = function() {\n  //Remove game instruction message\n  gameplayDisplay.removeGameInstruction();\n  //Dispay the victory message\n  gameplayDisplay.displayVictory(currentGame.victor, setupGame)\n}\n\n\nconst takeRound = function(humanCoors) {\n  //If victory has already been declared, do not execute the round\n  if (currentGame.victor) {\n    return\n  }\n\n  //If move is illegal, do not execute the round\n  const errorMessage = currentGame.illegalHumanMoveMessage(humanCoors)\n  if (errorMessage) {\n    return\n  }\n  \n  //If move is legal, take the turn\n  takeTurn(humanCoors, false)\n\n  //If human turn is decisive, short-circuit the round\n  if (currentGame.victor) {\n    declareVictory();\n    return\n  }\n\n  //If the human turn is not decisive, let the computer go\n  takeComputerTurn()\n}\n\n\n//Start first game\nsetupGame();\n\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;;;;;;;;;;;;;;;;ACnhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACfrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACxxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACvIA;AACA;AACA;;A;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;ACzvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}